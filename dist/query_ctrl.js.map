{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","Utils","_","tagKeyLookup","tagUrlKeyLookup","invert","GenericDatasourceQueryCtrl","$scope","$injector","uiSegmentSrv","scope","target","metricUrlName","rawDashboardQuery","datasource","metricFindQuery","then","transformToSegments","filters","length","errors","tags","addTagMode","currentTagKey","currentTagValue","targetBlur","key","value","removeTag","addTag","query","callback","map","v","k","onChangeInternal","dashboardQuery","assign","m","buildTagQueryObject","param","reduce","result","tagName","parsed","parseQueryString","each","buildPartialUrl","rawQuery","setTargetOptions","setRawDashboardQuery","panelCtrl","refresh","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\nimport * as Utils from './utils';\nimport _ from 'lodash';\n\nconst tagKeyLookup = {\n  \"host\": \"h\",\n  \"user\": \"u\",\n  \"job group\": \"c\",\n  \"queue\": \"q\",\n  \"app type\": \"apptype\",\n  \"workflow\": \"w\",\n  \"job\": \"j\",\n  \"task type\": \"tt\",\n  \"server type\": \"svt\",\n  \"spark type\": \"sst\",\n  \"task\": \"t\",\n  \"device\": \"d\",\n  \"sub-device\": \"sd\",\n  \"inserting host\": \"inshost\",\n  \"compression\": \"inscomp\",\n  \"file type\": \"instype\",\n  \"scheduler start\": \"ss\",\n  \"version\": \"v\",\n  \"region\": \"region\",\n  \"table\": \"table\",\n  \"namespace\": \"namespace\",\n};\n\nconst tagUrlKeyLookup = _.invert(tagKeyLookup);\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, uiSegmentSrv) {\n    super($scope, $injector);\n    this.scope = $scope;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.target.metricUrlName = this.target.metricUrlName || '';\n    this.target.rawDashboardQuery = this.target.rawDashboardQuery || \"\";\n  }\n\n  // remove?\n  getOptions() {\n    return this.datasource.metricFindQuery(this.target)\n        .then(this.uiSegmentSrv.transformToSegments(false));\n    // Options have to be transformed by uiSegmentSrv to be usable by metric-segment-model directive\n  }\n\n  addTag() {\n\n    if (this.target.filters && this.target.filters.length > 0) {\n      this.errors.tags = \"Please remove filters to use tags, tags and filters are mutually exclusive.\";\n    }\n\n    if (!this.addTagMode) {\n      this.addTagMode = true;\n      return;\n    }\n\n    if (!this.target.tags) {\n      this.target.tags = {};\n    }\n\n    // this.errors = this.validateTarget();\n\n    //if (!this.errors.tags) {\n    this.target.tags[this.target.currentTagKey] = this.target.currentTagValue;\n    this.target.currentTagKey = '';\n    this.target.currentTagValue = '';\n    this.targetBlur();\n    //}\n\n    this.addTagMode = false;\n  }\n\n  removeTag(key) {\n    delete this.target.tags[key];\n    this.targetBlur();\n  }\n\n  editTag(key, value) {\n    this.removeTag(key);\n    this.target.currentTagKey = key;\n    this.target.currentTagValue = value;\n    this.addTag();\n  }\n\n  closeAddTagMode() {\n    this.addTagMode = false;\n    return;\n  }\n\n  suggestTagKeys(query, callback) {\n    //this.datasource.suggestTagKeys(this.target.metric).then(callback);\n    callback(_.map(tagKeyLookup, (v, k) => {\n      return k\n    }));\n  };\n\n  targetBlur() {\n    //this.errors = this.validateTarget();\n    //this.refresh();\n    this.onChangeInternal();\n  }\n\n  buildPartialUrl() {\n    const dashboardQuery = _.assign({\n      m: this.target.metricUrlName\n    }, this.buildTagQueryObject());\n    return Utils.param(dashboardQuery);\n  }\n\n  buildTagQueryObject() {\n    if (this.target.tags) {\n      return _.reduce(this.target.tags, (result, v, k)=> {\n        const tagName = tagKeyLookup[k];\n        if (tagName) {\n          result[tagName] = v;\n        }\n        return result\n      }, {});\n    }\n    return {};\n  }\n\n  setTargetOptions() {\n    const parsed = Utils.parseQueryString(this.target.rawDashboardQuery);\n    this.target.tags = {};\n    _.each(parsed, (v, k) => {\n      const tagName = tagUrlKeyLookup[k];\n      if (tagName) {\n        this.target.tags[tagName] = v;\n      }\n    });\n    this.target.metricUrlName = parsed.m || \"\";\n  }\n\n  setRawDashboardQuery() {\n    this.target.rawDashboardQuery = this.buildPartialUrl();\n  }\n\n  toggleEditorMode() {\n    if (this.target.rawQuery) {\n      // parse the raw query and set the target options\n      this.setTargetOptions();\n    } else {\n      this.setRawDashboardQuery();\n    }\n\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  onChangeInternal() {\n    this.setRawDashboardQuery();\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\n  }\n\n  onRawChangeInternal() {\n    this.setTargetOptions();\n    this.panelCtrl.refresh();\n  }\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}